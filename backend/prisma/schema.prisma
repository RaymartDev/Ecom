generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  email        String         @unique
  password     String
  isAdmin      Boolean        @default(false)
  createdAt    DateTime       @default(now())
  orders       Order[]
  shoppingCart ShoppingCart[]
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String
  description  String
  price        Float
  stock        Int
  category     Category       @relation(fields: [categoryId], references: [id])
  categoryId   Int
  brand        Brand          @relation(fields: [brandId], references: [id])
  brandId      Int
  createdAt    DateTime       @default(now())
  orderItems   OrderItem[]
  shoppingCart ShoppingCart[]

  @@index([name])
  @@index([description])
}

model Brand {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]

  @@index([name])
}

model Order {
  id         Int         @id @default(autoincrement())
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  status     String      @default("Pending")
  createdAt  DateTime    @default(now())
  orderItems OrderItem[]

  @@index([status])
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float // Price at the time of the order (in case the product price changes later)
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]

  @@index([name])
}

model ShoppingCart {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int      @default(1) // Items can be updated in the cart.
  createdAt DateTime @default(now())
}
